#ifndef COMPILER_CONFIG_HH_
#define COMPILER_CONFIG_HH_

#cmakedefine f_add_zero
#cmakedefine f_add_one
#cmakedefine f_add_inc
#cmakedefine f_sub_zero
#cmakedefine f_sub_one
#cmakedefine f_sub_dec
#cmakedefine f_divide_by_zero
#cmakedefine f_divide_by_two_powers
#cmakedefine f_multiply_by_zero
#cmakedefine f_multiply_by_two_powers
#cmakedefine f_modulo_zero
#cmakedefine f_modulo_two
#cmakedefine f_cond_eq_zero
#cmakedefine f_cond_ne_zero
#cmakedefine f_cond_gt_zero
#cmakedefine f_const_expr

//
// stany optymalizacji (wlacz/wylacz)
//

// dodawanie zera
#ifdef f_add_zero
#define F_ADD_ZERO	(true)
#else
#define F_ADD_ZERO	(false)
#endif

// dodawanie jedynki
#ifdef f_add_one
#define F_ADD_ONE	(true)
#else
#define F_ADD_ONE	(false)
#endif

// dodawanie zamienione na inkrementacje
#ifdef f_add_one
#define F_ADD_INC	(true)
#else
#define F_ADD_INC	(false)
#endif

// odejmowanie zera
#ifdef f_sub_zero
#define F_SUB_ZERO	(true)
#else
#define F_SUB_ZERO	(false)
#endif

// odejmowanie jedynki
#ifdef f_sub_one
#define F_SUB_ONE	(true)
#else
#define F_SUB_ONE	(false)
#endif

// odejmowanie zamienione na dekrementacje
#ifdef f_sub_dec
#define F_SUB_DEC	(true)
#else
#define F_SUB_DEC	(false)
#endif

// dzielenie przez 0
#ifdef f_divide_by_zero
#define F_DIVIDE_BY_ZERO	(true)
#else
#define F_DIVIDE_BY_ZERO	(false)
#endif
/*
 * Copyright 2014 Rafał Bolanowski
 * All rights reserved.
 *
 * For licensing information please see the LICENSE file.
 */

// dzielenie przez potęgi dwójki
#ifdef f_divide_by_two_powers
#define F_DIVIDE_BY_TWO_POWERS	(true)
#else
#define F_DIVIDE_BY_TWO_POWERS	(false)
#endif

// mnożenie przez zero
#ifdef f_multiply_by_zero
#define F_MULTIPLY_BY_ZERO	(true)
#else
#define F_MULTIPLY_BY_ZERO	(false)
#endif

// mnożenie przez potęgi dwójki
#ifdef f_multiply_by_two_powers
#define F_MULTIPLY_BY_TWO_POWERS	(true)
#else
#define F_MULTIPLY_BY_TWO_POWERS	(false)
#endif

// modulo zero
#ifdef f_modulo_zero
#define F_MODULO_ZERO	(true)
#else
#define F_MODULO_ZERO	(false)
#endif

// modulo dwa
#ifdef f_modulo_two
#define F_MODULO_TWO	(true)
#else
#define F_MODULO_TWO	(false)
#endif

// x == 0
#ifdef f_cond_eq_zero
#define F_COND_EQ_ZERO	(true)
#else
#define F_COND_EQ_ZERO	(false)
#endif

// x != 0
#ifdef f_cond_ne_zero
#define F_COND_NE_ZERO	(true)
#else
#define F_COND_NE_ZERO	(false)
#endif

// x > 0
#ifdef f_cond_gt_zero
#define F_COND_GT_ZERO	(true)
#else
#define F_COND_GT_ZERO	(false)
#endif

// stałe wyrażenia
#ifdef f_const_expr
#define F_CONST_EXPR	(true)
#else
#define F_CONST_EXPR	(false)
#endif

#endif  // COMPILER_CONFIG_HH_

